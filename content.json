{"meta":{"title":"wulibobo个人杂文","subtitle":"键盘敲烂，年薪3300","description":"这是一个叫wulibobo的懒人程序所作。","author":"wulibobo","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"第1章：软件测试的研发流程","slug":"第1章：软件测试的研发流程","date":"2019-01-26T03:45:29.000Z","updated":"2019-01-27T02:00:02.993Z","comments":true,"path":"2019/01/26/第1章：软件测试的研发流程/","link":"","permalink":"http://yoursite.com/2019/01/26/第1章：软件测试的研发流程/","excerpt":"","text":"一、软件产品 软件是什么？ 软件产品有哪些部分构成？ 软件产品的中间过程文档？ 1.我们生活中常见的软件 2.什么是软件产品 大多数人认为，软件产品仅仅是从互联网上下载或者从光盘上安装到计算机上的程序。 实际上，许多“藏在背后”的东西通常被遗忘或忽视。作为软件测试人员，要记得所有的这些都是可能含有缺陷的，都是我们要测试的对象。 3.软件产品的特点 依赖于计算机系统 不会磨损老化 一种逻辑产品，不是客观的实体 手动的、定做的 4.软件产品的分类 按功能划分： 系统软件：Windows、linux、mac os、unix等 应用软件：QQ、微信、淘宝、王者荣耀、抖音等 支撑软件：常见的开发软件，介于上面两者之间 按部署划分： ​ 单机软件 分布式软件 5.软件产品由那些构成 源代码、数据、文档 6.软件产品的过程文档 ##二、软件工程 1.为什么会有软件工程？ 2.软件工程是什么？ ##三、软件开发过程 ##四、软件生命周期 ##五、软件的研发流程 ##六、软件测试流程 ##七、测试要掌握的技能","categories":[],"tags":[]},{"title":"软件测试面试宝典","slug":"软件测试面试宝典","date":"2019-01-23T07:18:00.000Z","updated":"2019-01-25T09:06:31.139Z","comments":true,"path":"2019/01/23/软件测试面试宝典/","link":"","permalink":"http://yoursite.com/2019/01/23/软件测试面试宝典/","excerpt":"","text":"一、软件测试基础：1.缺陷的生命周期123451、测试人员发现bug后，将bug提交到bug管理系统，并指派给对应的研发人员2、研发人员会确认bug，如果确定是bug，则修复bug,如果不是bug，则打回给测试。3. 开发人员修复bug后转给测试人员确认4. 测试人员对修复后的bug进行验证，确认是否正确修复，确认是否。有引发新问题，是否影响了原有正常的功能5、bug验证通过则关闭bug,若验证不通过，则重新激活，指派给研发修改 2.软件测试的流程1234567参考答案： 1.做需求分析 2.编写测试计划 3.确定测试方案 4.编写测试用例 5.执行测试用例、提交缺陷 6.报告结果输出 3.一条详细的bug包含哪些内容？这个有工具的不同，导致bug的参数也不一样，但是一般都会包括如下： 缺陷id 缺陷标题 缺陷提交时间 部门 严重度 优先级 所属版本 所属模块 用例id 测试类型 提交人 部门 4.你认为判断(评审)bug的依据是什么？#### Linux面试题：1.常见的操作系统平台：123unix系列：mac osLinux系列： centos、RedHat、ubuntu、安卓 等windows系列：windows7、8、10 ；win server 03 08 12 2.linux应用领域1a.办公 b.移动端 c.网络服务器 d.文件服务器 e.大数据 f.云 3.终端简介 [root@localhost ~]# 123root 当前登录用户为root @localhost 本机的主机名 ~ 家目录 # 管理员权限 $ 普通用户权限 ####","categories":[],"tags":[]},{"title":"软件测试第一章","slug":"软件测试第一章","date":"2019-01-23T06:16:26.000Z","updated":"2019-01-23T07:17:29.105Z","comments":true,"path":"2019/01/23/软件测试第一章/","link":"","permalink":"http://yoursite.com/2019/01/23/软件测试第一章/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"hexo的入门","slug":"hexo的入门","date":"2019-01-22T09:21:50.000Z","updated":"2019-01-23T08:26:42.375Z","comments":true,"path":"2019/01/22/hexo的入门/","link":"","permalink":"http://yoursite.com/2019/01/22/hexo的入门/","excerpt":"","text":"1.Hexo的入门​ hexo 可以理解为是基于node.js制作的一个博客工具，不是我们理解的一个开源的博客系统。 ​ hexo 正常来说，不需要部署到我们的服务器上，我们的服务器上保存的，其实是基于在hexo通过markdown编写的文章，然后hexo帮我们生成静态的html页面，然后，将生成的html上传到我们的服务器。简而言之：hexo是个静态页面生成、上传的工具。 ​ 下面我结合官网的文档和自己的一些理解，来一步步的将hexo部署到github,让你不需要付费(还不是穷)拥有一个你个人的博客系统，来管理你日常的一个笔记。 学习这个需要什么基础？ ​ 你要是有一点Linux和Git基础再好不过了。 为什么没有截图？ ​ 太麻烦了点，而且图片也不好迁移！ 1.1安装node.js参考网上安装教程验证安装是否成功 进入cmd 输入node -v 出现相应的版本号ok 1.2安装gitgit安装教程验证Git安装成功： 进入cmd 输入 git version 出现相应的版本号ok 1.3安装、配置Hexo文件 进入git bash窗口 输入以下命令 1npm install -g hexo-cli 比较慢，出现一大堆东西安装成功 输入以下命令 12345hexo init e:/文件夹名 ----表示在e盘创建这个文件夹cd 文件名 ----进入文件夹npm install ----安装 1.4关于hexo文件夹里面的内容1.4.1 hexo文件目录​ 安装hexo完毕，你可以到的E盘去看下，会发现多了文件夹。而这个文件夹的文件目录解释如下： 12345678├── _config.yml ├── package.json ├── scaffolds├── source| ├── _drafts| └── _posts└── themes 1.4.2 hexo目录文件介绍_config.yml网站的 配置信息，您可以在此配置大部分的参数。 package.json已经默认给你安装的应用程序的信息","categories":[],"tags":[]}]}