{"meta":{"title":"wulibobo个人杂文","subtitle":"键盘敲烂，年薪3300","description":"这是一个叫wulibobo的懒人程序所作。","author":"wulibobo","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"第1章：软件测试的研发流程","slug":"第1章：软件测试的研发流程","date":"2019-01-26T03:45:29.000Z","updated":"2019-01-26T03:56:22.967Z","comments":true,"path":"2019/01/26/第1章：软件测试的研发流程/","link":"","permalink":"http://yoursite.com/2019/01/26/第1章：软件测试的研发流程/","excerpt":"","text":"一、软件产品 软件是什么？ 软件产品有哪些部分构成？ 软件产品的中间过程文档？ 1.我们生活中常见的软件 ##二、软件工程 ##三、软件开发过程 ##四、软件生命周期 ##五、软件的研发流程 ##六、软件测试流程 ##七、测试要掌握的技能","categories":[],"tags":[]},{"title":"软件测试面试宝典","slug":"软件测试面试宝典","date":"2019-01-23T07:18:00.000Z","updated":"2019-01-25T09:06:31.139Z","comments":true,"path":"2019/01/23/软件测试面试宝典/","link":"","permalink":"http://yoursite.com/2019/01/23/软件测试面试宝典/","excerpt":"","text":"一、软件测试基础：1.缺陷的生命周期123451、测试人员发现bug后，将bug提交到bug管理系统，并指派给对应的研发人员2、研发人员会确认bug，如果确定是bug，则修复bug,如果不是bug，则打回给测试。3. 开发人员修复bug后转给测试人员确认4. 测试人员对修复后的bug进行验证，确认是否正确修复，确认是否。有引发新问题，是否影响了原有正常的功能5、bug验证通过则关闭bug,若验证不通过，则重新激活，指派给研发修改 2.软件测试的流程1234567参考答案： 1.做需求分析 2.编写测试计划 3.确定测试方案 4.编写测试用例 5.执行测试用例、提交缺陷 6.报告结果输出 3.一条详细的bug包含哪些内容？这个有工具的不同，导致bug的参数也不一样，但是一般都会包括如下： 缺陷id 缺陷标题 缺陷提交时间 部门 严重度 优先级 所属版本 所属模块 用例id 测试类型 提交人 部门 4.你认为判断(评审)bug的依据是什么？#### Linux面试题：1.常见的操作系统平台：123unix系列：mac osLinux系列： centos、RedHat、ubuntu、安卓 等windows系列：windows7、8、10 ；win server 03 08 12 2.linux应用领域1a.办公 b.移动端 c.网络服务器 d.文件服务器 e.大数据 f.云 3.终端简介 [root@localhost ~]# 123root 当前登录用户为root @localhost 本机的主机名 ~ 家目录 # 管理员权限 $ 普通用户权限 ####","categories":[],"tags":[]},{"title":"Java从入门到放弃","slug":"java从入门到放弃","date":"2019-01-23T07:18:00.000Z","updated":"2019-01-25T08:04:34.530Z","comments":true,"path":"2019/01/23/java从入门到放弃/","link":"","permalink":"http://yoursite.com/2019/01/23/java从入门到放弃/","excerpt":"","text":"一、java基础1.Hello World入门1.1如何下载、配置、验证jdk自己点击：一分钟装好jdk，踏上java开发征途！ 1.2命令行运行HelloWorld自己点击:java 通过命令来运行java 得出结论：java的运行原理 提高，如何通过命令行来打jar包和运行jar包 1.3下载、安装、使用Eclipse如何下载、安装Eclipse 怎么样使用eclipse写java eclipse的字体大小设置 eclipse的快捷键设置 2.变量2.1什么是变量？2.1.1什么是变量？1变量的定义是： 用来命名一个数据的标识符,也可以看成内存中的一块区域。 2018 这是一个数字，代表某年 如果要命名这个数字，在java里就会写成： 1int year = 2018; int 是数据类型，表示是整数year 是一个标识符= 是赋值操作符1949 是一个数字类型的值; 表示该行结束 2.2基本变量（数据）类型12345678一个变量的类型，决定了该变量可以包含什么样的值。Java中有八种基本类型，都是Java语言预先定义好的，并且是关键字。这八种基本类型分别是：整型 （4种）字符型 （1种）浮点型 （2种）布尔型（1种） 2.2.1 整型1234567整型变量用于存放整数byteshortintlong区别在于不同类型的整型，最大值，最小值不一样如果试图给byte类型的变量赋予超出其范围的值，就会产生编译错误 分类 案列代码 123456789101112public class HelloWorld&#123; public static void main(String[] args)&#123; byte b = 1; short s = 200; int i = 300; long l = 400; /*如果试图给byte类型的变量赋予超出其范围的值，就会产生编译错误*/ byte b2 = 200; &#125;&#125; 2.2.2 字符型123char类型用于存放一个字符，值用单引号&apos;表示 (双引号表示字符串)其长度和short一样，也是16位的只能存放一个字符，超过一个字符就会产生编译错误 案列代码 12345678public class HelloWorld&#123; public static void main(String[] args)&#123; char c = &apos;中&apos;; //char 只能存放一个字符，超过一个字符就会产生编译错误 char c2 = &apos;中国&apos;; //报错 char c3 = &apos;ab&apos;; //报错 &#125;&#125; 推荐阅读：关于ASCII码表和java的char类型 2.2.3浮点型12345678浮点数类型有两种 float 长度为32位 double 长度为64位 注意： 默认的小数值是double类型的 所以 float f = 54.321会出现编译错误，因为54.321的默认类型是 double，其类型 长度为64，超过了float的长度32 在数字后面加一个字母f，直接把该数字声明成float类型 float f2 = 54.321f, 这样就不会出错了 分类 案列代码** 12345678public class HelloWorld&#123; public static void main(String[] args)&#123; double d = 123.45; //该行会出现编译错误，因为54.321是double型的 float f = 54.321; float f2 = 54.321f; &#125;&#125; 2.2.4布尔类型123456789布尔型用于表示真假其长度为1 boolean b1 = true;boolean b2 = false; 分别代表真假虽然布尔型真正存放的数据是0(false) 1(true)但是，不能直接使用0 1 进行赋值 分类 案列代码 12345678910111213public class HelloWorld &#123; public static void main(String[] args) &#123; boolean b1 = true; boolean b2 = false; // 虽然布尔型真正存放的数据是0(false) 1(true) // 但是，不能直接使用0 1 进行赋值 boolean b3 = 1; &#125;&#125; 2.2.5 String类型String类型其实并不是基本类型，但是它是如此广泛的被使用，常常被误以为是一种基本类型。 String类型是Immutable的，一旦创建就不能够被改变，后面会讲到关于String的学习 12345public class HelloWorld &#123; public static void main(String[] args) &#123; String str = &quot;Hello Java&quot;; &#125;&#125; 2.2.6参考博客java中的数据类型 2.3字面值1234给基本类型的变量赋值的方式叫做 字面值，如下所例： float hp = 313f;int armor = 24; 2.3.1整数字面值1234567当以l或者L结尾的时候，一个整数字面值是long类型，否则就是int类型。 建议使用大写的L而非小写的l，因为容易和1混淆。 byte,short,int和long的值都可以通过int类型的字面值来创建。整数的字面值可以用如下四种进制来表示： 十进制: 基 10, 包含从0-9的数字，平常用的就是这种十六进制: 基 16, 包含从0-9的数字，和从A-F的字母。八进制: 基 8, 包含从0-7的数字二进制: 基 2, 包含0和1。（从 JAVA7开始就可以创建 二进制的字面值了） 推荐阅读：常见的进制转换 案列代码 12345678910public class HelloWorld &#123; public static void main(String[] args) &#123; long val = 26L; //以L结尾的字面值表示long型 int decVal = 26; //默认就是int型 int hexVal = 0x1a; //16进制 int oxVal = 032; //8进制 int binVal = 0b11010; //2进制 System.out.println(oxVal); &#125;&#125; 2.3.2浮点数字面值12345当以f或者F结尾的时候，就表示一个float类型的浮点数，否则就是double类型（以d或者D结尾，写不写都可以）。浮点数还可以用E或者e表示（科学计数法）e2表示10的二次方，即1001.234e2 = 1.234x100 案列代码： 1234567public class HelloWorld &#123; public static void main(String[] args) &#123; float f1 = 123.4F;// 以F结尾的字面值表示float类型 double d1 = 123.4;// 默认就是double类型 double d2 = 1.234e2;// 科学计数法表示double &#125;&#125; 2.3.3字符和字符串字面值12345字符的字面值放在单引号中字符串的字面值放在双引号中需要注意的是，\\表示转义，比如需要表示制表符，回车换行，双引号等就需要用 \\t \\r \\n \\&quot; 的方式进行 案列代码 12345678910111213public class HelloWorld &#123; public static void main(String[] args) &#123; String name = &quot;盖伦&quot;; char a= &apos;c&apos;; //以下是转义字符 char tab = &apos;\\t&apos;; //制表符 char carriageReturn = &apos;\\r&apos;; //回车 char newLine = &apos;\\n&apos;; //换行 char doubleQuote = &apos;\\&quot;&apos;; //双引号 char singleQuote = &apos;\\&apos;&apos;; //单引号 char backslash = &apos;\\\\&apos;; //反斜杠 &#125;&#125; 2.4 类型转换 不同类型之间的数据可以互相转换，但是要满足一定的规则 2.4.1 转换规则​ 转换规则如图所示 精度高的数据类型就像容量大的杯子，可以放更大的数据 精度低的数据类型就像容量小的杯子，只能放更小的数据 ​ 小杯子往大杯子里倒东西，大杯子怎么都放得下 大杯子往小杯子里倒东西，有的时候放的下，有的时候就会有溢出 需要注意的一点是 虽然short和char都是16位的，长度是一样的 但是彼此之间，依然需要进行强制转换 2.4.2 低精度向高精度转换 int比较小，要放进比较大的long,随便怎么样，都放的进去 案列 12345678public class HelloWorld &#123; public static void main(String[] args) &#123; long l = 50; int i = 50; //int比较小，要放进比较大的long,随便怎么样，都放的进去 l = i; &#125;&#125; 2.4.3 高精度向低精度转换12345byte b = 5;int i1 = 10;int i2 = 300;b = i1;b=i2; b的类型是byte,其长度是8，最大只能放127 i1 的类型是int, 其长度是32,最大，反正就是很大了，超过127 所以， 把int类型的数据转成为byte类型的数据，是有风险的 有的时候是可以转换的，比如 b = i1 (i1=10); 有的时候不可以转换 比如 b= i2 (i2=300) 因为放不下了 编译器就会提示错误 这个时候就只能采用强制转换，强制转换的意思就是，转是可以转的，但是不对转换之后的值负责。 风险自担，后果自负 案列代码 123456789101112131415161718192021public class HelloWorld &#123; public static void main(String[] args) &#123; byte b = 5; int i1 = 10; int i2 = 300; b = (byte) i1; //因为i1的值是在byte范围之内，所以即便进行强制转换 //最后得到的值，也是10 System.out.println(b); //因为i2的值是在byte范围之外，所以就会按照byte的长度进行截取 //i2的值是300，其对应的二进制数是 100101100 //按照byte的长度8位进行截取后，其值为 00101100 即44 b =(byte) i2; System.out.println(b); //查看一个整数对应的二进制的方法： System.out.println(Integer.toBinaryString(i2)); &#125;&#125; 2.4.4练习类型转换12345short a = 1;short b = 2;那么 a+b 是什么类型？提示：整型和整型进行运算的时候，如果两边的值都是小于或者等于int的，那么其结果就是int。 2.5命名规则 变量命名必须满足一系列的条件，不能随意命名 2.5.1命名规则12345变量命名只能使用： 字母、数字、$、_ 变量第一个字符 只能使用：字母、$、_ 变量第一个字符 不能使用：数字 注：_ 是下划线，不是-减号或者—— 破折号 案列： 12345678int a= 5;int a_12= 5;int $a43= 5;int a434= 5;//第一个是数字，是不行的int 34a= 5; 2.5.2使用完整的单词命名，而非缩写 命名的时候，尽量使用完整的单词进行命名，比如name,moveSpeed，而不是使用缩写 n,m。 1234567public class Hero &#123; //使用完整单词命名，易于理解 String name; float hp; float armor; int moveSpeed; &#125; 2.5.3不能只是用关键字，但是可以包含关键字 什么是关键字 比如int, short, class 这些单词已经被java 赋予了特殊的含义，这些就是关键字。不能直接用来作为变量名 案列代码 12345public class HelloWorld &#123; public static void main(String[] args) &#123; int class5 = 5; &#125;&#125; 2.5.4关键字列表 2.5.5中文也可以用来命名变量名 中文也是可以用来命名变量的 但是在实际工作中。。。别这么干。。。 123456public class 苍老师 &#123; public static void main(String[] args) &#123; String 姓名=苍老师 String 年龄=30 &#125;&#125; 2.5.6 练习-命名规范1234567891011121314151617181920思考如下变量命名是否合法，如果不合法，为什么？ 注: 不要一来就在eclipse中进行验证，因为eclipse几乎已经告诉你答案了1. int a_;2. int a@;3. int a3;4. int 8@;5. int 9_;6. int X$_;7. int y;8. int _$_;9. int $_$;10. int $*$;11. int $1$;12. int _1_;13. int _@_;14. int a#;15. int a&quot;;16. int 123a&quot;;17. int 123a_;18. int $123b_; 2.6表达式12以;结尾的一段代码，即为一个表达式表达式是由变量、操作符以及方法调用所构成的结构。 案列代码 12345678910111213141516public class HelloWorld &#123; public static void main(String[] args) &#123; //每一句话都是一个表达式 int i = 5; System.out.println(5); &#125;&#125;//一个空;也是一个表达式public class HelloWorld &#123; public static void main(String[] args) &#123; //一个空;也是一个表达式 ; &#125;&#125; 2.7块 从{ 开始 到对应的} 结束，即一个块 案列代码 12345public class HelloWorld &#123; //类对应的块 public static void main(String[] args) &#123; //主方法对应的块 System.out.println(&quot;abc&quot;); &#125;&#125; 3.面向对象（难点） 这里会引入面向对象的基本概念 ，但是不会深入展开，仅仅是引入. 深入的学习会在后续 。 123相信你肯定玩过DOTA或者LOL，没玩过，也一定听说过身边有很多的朋友在玩这款游戏的 假设，我们要设计一个LOL这样的游戏，使用面向对象的思想来设计，应该怎么做？ 3.1设计英雄这个类需求： 123456 LOL有很多英雄，比如盲僧，盖伦，琴女等所有这些英雄，都有一些共同的状态，他们都有名字，血量，护甲，移动速度等等！ 这样我们就可以设计一种东西，叫做类，代表英雄这样一种事物 类： 英雄(Hero)状态： 名字, 血量，护甲，移动速度 类图分析 英雄类的代码 注意不是所有类都有main方法 123456public class Hero &#123; String name; //姓名 float hp; //血量 float armor; //护甲 int moveSpeed; //移动速度&#125; 3.2创建具体的英雄12345类就像一个模板，根据这样一个模板，可以创建一个个的具体的英雄 一个个具体的英雄，就叫一个个的对象 new Hero() 就是java中创建一个英雄对象的意思 案列代码： 1234567891011121314151617181920public class Hero &#123; String name; //姓名 float hp; //血量 float armor; //护甲 int moveSpeed; //移动速度 public static void main(String[] args) &#123; Hero garen = new Hero(); garen.name = &quot;盖伦&quot;; garen.hp = 616.28f; garen.armor = 27.536f; garen.moveSpeed = 350; Hero teemo = new Hero(); teemo.name = &quot;提莫&quot;; teemo.hp = 383f; teemo.armor = 14f; teemo.moveSpeed = 330; &#125; &#125; 3.3类的第一字母大写好的编程习惯会让代码看上去更清爽，易读，容易维护 比如类的第一个字母大写 Hero 12 3.4练习 推荐阅读：关于java的面向对象 二、java中级三、java高级四、java应用五、前端部分六、javaEE七、java框架八、工具和中间件九、数据库十、实践项目十一、面试题","categories":[],"tags":[]},{"title":"软件测试第一章","slug":"软件测试第一章","date":"2019-01-23T06:16:26.000Z","updated":"2019-01-23T07:17:29.105Z","comments":true,"path":"2019/01/23/软件测试第一章/","link":"","permalink":"http://yoursite.com/2019/01/23/软件测试第一章/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"hexo的入门","slug":"hexo的入门","date":"2019-01-22T09:21:50.000Z","updated":"2019-01-23T08:26:42.375Z","comments":true,"path":"2019/01/22/hexo的入门/","link":"","permalink":"http://yoursite.com/2019/01/22/hexo的入门/","excerpt":"","text":"1.Hexo的入门​ hexo 可以理解为是基于node.js制作的一个博客工具，不是我们理解的一个开源的博客系统。 ​ hexo 正常来说，不需要部署到我们的服务器上，我们的服务器上保存的，其实是基于在hexo通过markdown编写的文章，然后hexo帮我们生成静态的html页面，然后，将生成的html上传到我们的服务器。简而言之：hexo是个静态页面生成、上传的工具。 ​ 下面我结合官网的文档和自己的一些理解，来一步步的将hexo部署到github,让你不需要付费(还不是穷)拥有一个你个人的博客系统，来管理你日常的一个笔记。 学习这个需要什么基础？ ​ 你要是有一点Linux和Git基础再好不过了。 为什么没有截图？ ​ 太麻烦了点，而且图片也不好迁移！ 1.1安装node.js参考网上安装教程验证安装是否成功 进入cmd 输入node -v 出现相应的版本号ok 1.2安装gitgit安装教程验证Git安装成功： 进入cmd 输入 git version 出现相应的版本号ok 1.3安装、配置Hexo文件 进入git bash窗口 输入以下命令 1npm install -g hexo-cli 比较慢，出现一大堆东西安装成功 输入以下命令 12345hexo init e:/文件夹名 ----表示在e盘创建这个文件夹cd 文件名 ----进入文件夹npm install ----安装 1.4关于hexo文件夹里面的内容1.4.1 hexo文件目录​ 安装hexo完毕，你可以到的E盘去看下，会发现多了文件夹。而这个文件夹的文件目录解释如下： 12345678├── _config.yml ├── package.json ├── scaffolds├── source| ├── _drafts| └── _posts└── themes 1.4.2 hexo目录文件介绍_config.yml网站的 配置信息，您可以在此配置大部分的参数。 package.json已经默认给你安装的应用程序的信息","categories":[],"tags":[]}]}